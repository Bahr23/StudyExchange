import telegram
from pyqiwip2p import QiwiP2P
from pyqiwip2p.types import QiwiCustomer, QiwiDatetime
import time
import datetime

from telegram import Bot

from pay import *

from models import *
from transaction import *

with db_session:
    phone = Settings.get(key='phone').value
    token = Settings.get(key='token').value

    QIWI_PRIV_KEY = Settings.get(key='QIWI_PRIV_KEY').value

p2p = QiwiP2P(auth_key=QIWI_PRIV_KEY)
tr = Transaction

with db_session:
    TOKEN = Settings.get(key='tg_token').value

bot = Bot(token=TOKEN)


def monitoring():
    print(bot.username + ' start checking Transactions!')
    while True:
        print('Checking Transactions is active!')
        check_chats()
        with db_session:
            bills = list(select(u for u in Bills))
            for b in bills:
                bi = p2p.check(bill_id=b.bill_id)
                expiration = time.mktime(time.strptime(b.expiration, '%Y-%m-%dT%H:%M:%S+03:00'))
                if expiration > time.time():
                    if bi.status == 'PAID':
                        comment = decomment(bi.comment).split('@')
                        pas = Settings.get(key='password').value
                        if comment[1] == pas:
                            user = User.get(id=int(comment[0]))
                            if user:
                                user.balance += int(float(bi.amount))
                                t = tr.new(type='–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', bill_id=str(bi.bill_id), amount=int(float(bi.amount)), user_id=user.id, date=str(datetime.datetime.now())[0:19])
                                p2p.reject(bill_id=b.bill_id)
                                b.delete()
                                text = '–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ' + str(int(float(bi.amount))) + ' —Ä—É–±. üí∏'
                                bot.send_message(chat_id=user.user_id, text=text)
                else:
                    p2p.reject(bill_id=b.bill_id)
                    b.delete()
        time.sleep(5)


def check_chats():
    print('Checking Chats is active!')
    with db_session:
        chats = list(select(u for u in Chat))
        for c in chats:
            if c.status == 'wait':
                chat_members_count = bot.get_chat_members_count(chat_id=int(c.chat_id))
                if chat_members_count >= 4:
                    pintext = '‚ö†Ô∏è –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π:\n\n' \
                              '1. –û–±–µ —Å—Ç–æ—Ä–æ–Ω—ã –æ–±–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç –≤—Å–µ —É—Å–ª–æ–≤–∏—è –∑–∞–∫–∞–∑–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ –∫–ª–∏–µ–Ω—Ç –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å' \
                              ' –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å "/price [<b>—Ü–µ–Ω–∞</b>]" –≤ –æ–±—â–∏–π —á–∞—Ç.\n2. –ö–ª–∏–µ–Ω—Ç –≤–Ω–æ—Å–∏—Ç –ø–æ–ª–Ω—É—é –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É' \
                              ' —á–µ—Ä–µ–∑ –±–æ—Ç–∞. –ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –≤ –æ–±—â–∏–π —á–∞—Ç. –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ' \
                              ' —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ø—Ä–∏—Å—Ç—É–ø–∞–µ—Ç –∫ —Ä–∞–±–æ—Ç–µ.\n3. –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∏–ª–∏' \
                              ' –∫–ª–∏–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å "/done" –≤ –æ–±—â–∏–π —á–∞—Ç.\n\n–ó–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å–ø–æ—Ä–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π ' \
                              '–æ—Ç–≤–µ—á–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä, –≤—ã–∑–≤–∞—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π "/admin".'
                    pinid = bot.send_message(chat_id=int(c.chat_id), text=pintext, timeout=500,
                                             parse_mode=telegram.ParseMode.HTML, )
                    bot.pin_chat_message(chat_id=int(c.chat_id), message_id=pinid.message_id)
                    c.status = 'active'

monitoring()
